---
title: "Itens e Estruturas"
author: "Simoldes"
---

```{r}
library(tidyverse)
library(janitor)
library(readxl)
library(here)
library(cellranger)
library(gdata)

```

### Ler informações de itens: Matéria Prima, Componentes, Semi-acabados (I) e acabados (F)

```{r}

source("R/read-itens.R")

filename_itens <- here("data", "Artigos 2025-07-08.xlsx")
itens <- read_itens(filename_itens)

mp <- 
itens |> 
        filter(!str_detect(tetenr, "^E1")) |>
      filter(!str_detect(tetenr, "^E2")) |>
      filter(!str_detect(tetenr, "^F0")) |>
      filter(!str_detect(tetenr, "^FA")) |>
      filter(!str_detect(tetenr, "^IO")) |>
      filter(!str_detect(tetenr, "^LM")) |>
      filter(!str_detect(tetenr, "^LP")) |>
      filter(!str_detect(tetenr, "^MA")) |>
      filter(!str_detect(tetenr, "^MO")) |>
      filter(!str_detect(tetenr, "^R1")) |>
      filter(!str_detect(tetenr, "^R2")) |>
      filter(!str_detect(tetenr, "^SE")) |>
      filter(!str_detect(tetenr, "^SP")) |>
      filter(!str_detect(tetenr, "^V1")) |>
  select(tetenr, temagr, mat_group_desc, desc, familia) |> 
  filter(!str_detect(tetenr, "^F")) |> 
  filter(!str_detect(tetenr, "^I")) |> 
  filter(!str_detect(tetenr, "^SP"))

mp |> View()
mp |> write.csv("mp.csv")

  View()

fi <- 
  itens |> filter(str_detect(tetenr, "^F") | str_detect(tetenr, "^I"))
fi |> nrow()
fi |> View()

f |> filter(str_detect(tetenr, "F00717002041A")) |> View()
```

## Determinar a Carteira de Produtos Simoldes

Para filtrar os itens que fazem parte da carteira de produtos simoldes atual vamos utilizar 2 fontes:

1.  Arquivos de Pedidos em Carteira
2.  Relatório de Vendas

#### Pedidos em Carteira

```{r}
source("R/carteira-pedidos.R")  

pedidos <- get_order_history()  

pedidos |> glimpse()  

pedidos |> 
  distinct(item) |> 
  nrow()  

pedidos |> 
  distinct(customer_number, doca_code, item) |> 
  nrow()

pedidos <-
  pedidos |>
  filter(
    !customer %in% c(
      "BELLS INDUSTRIA",
      "BIOPLASTICOS",
      "CEMAS DO BRASIL",
      "FAURECIA",
      "FAURECIA AUTOMOT. BRASIL",
      "FWC GANCHEIRAS",
      "HB - SMR LOCACAO DE",
      "HB SMR SP 0008-73",
      "INDUSERVICE SERVICOS",
      "KUNST",
      "LINKPLAS IND.PLASTIC",
      "MADIS CONFECCOES",
      "NEW TECH COMPANY",
      "NILKO TECNOLOGIA LTD",
      "OMEGA RECYCLING",
      "PKS PLASTICOS",
      "PLASMAPLAST",
      "SIMOLDES ACOS BRASIL",
      "SIMOLDES PLASTICOS",
      "SPI",
      "SUMMA POLIMEROS"
    )
  )

pedidos |> 
  distinct(item) |> 
  nrow()  

pedidos |> 
  distinct(customer_number, doca_code, item) |> 
  nrow()


p1 <- 
  pedidos |> 
  distinct(item) 

p1 |> nrow()

```

#### Relatórios de Vendas

```{r}

source("R/read-vendas.R")  
spb_vendas <- 
  get_itens_from_branch("SPB") 
spb_vendas <- 
  spb_vendas |> 
  select(item) |> 
  mutate(filial = "SPI")  
spi_vendas <- 
  get_itens_from_branch("SPI") 
spi_vendas <- 
  spi_vendas |> 
  select(item) |> 
  mutate(filial = "SPI")  
vendas <- 
  rbind(spb_vendas, spi_vendas) |>    
  distinct(item, filial) 
vendas |>  
  count(item, sort = TRUE) |> 
  View() 
vendas |> glimpse()  
```

### Join Vendas com Recent Orders

```{r}
df_para_importar <-  
  p1 |> 
  full_join(vendas) |> 
  distinct(item) |> 
  filter(str_detect(item,"^F"))
para_importar <- 
  df_para_importar |> 
  pull(item)
length(para_importar)

```

## Ler estruturas de BoM e BoP

```{r}
# F02516005002B  - 638435RA0A
# F02516004002B - 638425RA0A

f2041 <- build_bom("F00717002041A", bom)
f2041 |> View()
f2045 <- build_bom("F00717002045A", bom)
f2045 |> View()
f2040 <- build_bom("F00717002040A", bom)
f2040 |> View()
f3040 <- build_bom("F00717003040A", bom)
f3040 |> View()

bop_spb <- read_bop(file_bop_spb)
bop_spi <- read_bop(file_bop_spi)

bop_spb |> View()

```

Vamos utilizar a BoM para identificar toda a Matéria prima relacionada a um item

```{r}

source("R/read-bom.R")
source("R/read-bop.R")

file_bom <- here::here("data", "BOM 2025-06-11.xlsx")

file_bop_spi <- here::here("data", "BOP SPI 2025-07-20.xlsx")
file_bop_spb <- here::here("data", "BOP SPB 2025-07-20.xlsx")

bom <- read_bom(file_bom)

bom |> View()

df_mp_cmp <- 
  map(para_importar, ~ build_bom(.x, bom) |> get_mp_cmp_from_item_bom()) |>
  reduce(rbind)
df_mp_cmp |> nrow()

mp_cmp <-
  df_mp_cmp |> 
  distinct(bom_component) |> 
  pull(bom_component)
mp_cmp |> length()


```

## Preparar arquivo para importar em massa BoM e BoP

Vamos trabalhar com 4 itens do JIT VW:

2GP 868 010 C BSE F00717002041A PNL TRAS DIR T-CROSS DOOR PANEL TITAN COOL RR

2GP 867 006 L AAM F00717003040A PNL DIAN DIR T-CROSS DOOR PAINEL W/LIGH/CHIM FR

2GP 868 009 C BSE F00717002040A PNL TRAS ESQ T-CROSS DOOR PANEL TITAN COOL RL

2GP 867 005 M AAM F00717002045A PNL DIAN ESQ T-CROSS DOOR PAINEL W/LIGHT/CRE FL

```{r}

itens_to_import <- c("F00717002041A", 
                       "F00717003040A",
                       "F00717002040A", 
                       "F00717002045A")

import_data <- 
  f |> 
  filter(tetenr %in% itens_to_import) |> 
  filter(empresa == "SPB")

import_raw_material <- 
map(itens_to_import, 
    ~ get_bom_from_id(.x, bom) |> get_itens_of_bom(itens)) |> 
  reduce(rbind)


import_raw_material |> View()




```

## Final import set

```{r}

to_imp_itens <- 
  itens |> filter(tetenr %in% mp_cmp)

to_imp_itens <- 
  set_item_family(to_imp_itens)


# Estes dados servem para importar em massa
# Antes é preciso criar as famílias manualmente
to_imp_itens |> 
  select(estabelecimento, tetenr, desc, temagr, mat_group_desc, grupo_estoque, family) |> View()

```

## 
