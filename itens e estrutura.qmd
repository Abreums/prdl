---
title: "Itens e Estruturas"
author: "Simoldes"
---

```{r}
library(tidyverse)
library(janitor)
library(readxl)
library(here)
library(cellranger)
library(gdata)

```

## Itens

```{r}
#| warning: false

source("R/read-itens.R")

#filename_itens <- here("data", "Artigos 2025-07-08.xlsx")
filename_itens <- here("data", "Artigos 2025-09-02.xlsx")

itens <- read_itens(filename_itens)

projetos <- 
itens |> 
  filter(str_detect(tetenr, "^F")) |> 
  select(item = tetenr,
         prj_sigla = teprgr,
         prj_desc = fstext)

projetos |> write_rds("data/projetos.rds")
projetos <- read_rds("data/projetos.rds")

```

## Determinar a Carteira de Produtos Simoldes

Para filtrar os itens que fazem parte da carteira de produtos simoldes atual vamos utilizar 2 fontes:

1.  Arquivos de Pedidos em Carteira
2.  Relatório de Vendas

#### Pedidos em Carteira

```{r}
source("R/carteira-pedidos.R")  

pedidos <- get_order_history()  

pedidos <-
  pedidos |>
  filter(
    !customer %in% c(
      "BELLS INDUSTRIA",
      "BIOPLASTICOS",
      "CEMAS DO BRASIL",
      "FAURECIA",
      "FAURECIA AUTOMOT. BRASIL",
      "FWC GANCHEIRAS",
      "HB - SMR LOCACAO DE",
      "HB SMR SP 0008-73",
      "INDUSERVICE SERVICOS",
      "KUNST",
      "LINKPLAS IND.PLASTIC",
      "MADIS CONFECCOES",
      "NEW TECH COMPANY",
      "NILKO TECNOLOGIA LTD",
      "OMEGA RECYCLING",
      "PKS PLASTICOS",
      "PLASMAPLAST",
      "SIMOLDES ACOS BRASIL",
      "SIMOLDES PLASTICOS",
      "SPI",
      "SUMMA POLIMEROS"
    )
  )


pedidos |> write_rds("data/carteira-pedidos.RDS")
pedidos <- read_rds("data/carteira-pedidos.RDS")

```

#### Relatórios de Vendas

```{r}

source("R/read-vendas.R")  

spb_vendas <- 
  get_itens_from_branch("SPB") 

spb_vendas <-
  spb_vendas |>
  mutate(filial = "SPB")

spi_vendas <- 
  get_itens_from_branch("SPI") 

spi_vendas <- 
  spi_vendas |> 
  mutate(filial = "SPI")  

vendas <- 
  rbind(spb_vendas, spi_vendas)

vendas <- 
  vendas |> 
  mutate(year = year(as.Date(status))) |> 
  group_by(item) |> 
  summarise(year = max(year))

# acrescentar informações de projeto
vendas <- 
  vendas |> 
  left_join(itens |> select(item = tetenr, prj = teprgr, prj2 = fstext)) |> 
  distinct(prj, prj2, year, item)

vendas |> write_rds("data/vendas.rds")
vendas <- read_rds("data/vendas.rds")

```

## Escopo - Peças F

```{r}
escopo_f <- 
  itens |> 
  filter(str_detect(tetenr, "^F")) |> 
  select(item = tetenr, prj = teprgr, prj2 = fstext) |> 
  left_join(p_importar)

escopo_f |> write_rds("data/escopo-f.rds")
escopo_f <- read_rds("data/escopo-f.rds")

```

## Escopo - Importar

```{r}

p_importar <- 
  pedidos |>
  mutate(year = year(order_date)) |> 
  group_by(item) |> 
  summarise(year = max(year)) |> 
  left_join(itens |> select(item = tetenr, prj = teprgr, prj2 = fstext)) |> 
  distinct(prj, prj2, year, item)

p_importar <-
  p_importar |> 
  rbind(vendas) |> 
  group_by(item) |> 
  summarise(prj = first(prj, na.rm = TRUE),
            prj2 = first(prj2, na.rm = TRUE),
            year = max(year)) |> 
  select(prj, prj2, year, item) |> 
  filter(str_detect(item, "^F"))

p_importar |> saveRDS(file = "data/p-importar.rds")
p_importar <- read_rds("data/p-importar.rds")
```

## Ler estruturas de BoM e BoP

```{r}

source("R/read-bom.R")
source("R/read-bop.R")

# file_bom <- here::here("data", "BOM 2025-06-11.xlsx")
file_bom <- here::here("data", "BOM 2025-09-02.xlsx")
bom <- read_bom(file_bom)

file_bop_spi <- here::here("data", "BOP SPI 2025-07-20.xlsx")
file_bop_spb <- here::here("data", "BOP SPB 2025-07-20.xlsx")

bop_spi <- read_bop(file_bop_spi)
bop_spb <- read_bop(file_bop_spb)

bop <- rbind(bop_spi, bop_spb)

bop |> glimpse()

## Alguns itens não possuem BOM registrada!
## Pendente decidir o que fazer com estes!
p_importar |> 
  anti_join(bom, join_by(item == material_number)) |> 
  View()

```

## BoM do que vai importar

```{r}

p_importar |> glimpse()

x <- get_bom_from_id("F02023004001A", bom)


mp <-
  itens |>
  filter(!str_detect(tetenr, "^E1")) |>
  filter(!str_detect(tetenr, "^E2")) |>
  filter(!str_detect(tetenr, "^F0")) |>
  filter(!str_detect(tetenr, "^FA")) |>
  filter(!str_detect(tetenr, "^IO")) |>
  filter(!str_detect(tetenr, "^LM")) |>
  filter(!str_detect(tetenr, "^LP")) |>
  filter(!str_detect(tetenr, "^MA")) |>
  filter(!str_detect(tetenr, "^MO")) |>
  filter(!str_detect(tetenr, "^R1")) |>
  filter(!str_detect(tetenr, "^R2")) |>
  filter(!str_detect(tetenr, "^SE")) |>
  filter(!str_detect(tetenr, "^SP")) |>
  filter(!str_detect(tetenr, "^V1")) |>
  select(tetenr, temagr, mat_group_desc, desc) |>
  filter(!str_detect(tetenr, "^F")) |>    
  filter(!str_detect(tetenr, "^I")) |>    
  filter(!str_detect(tetenr, "^SP"))



```

## 

## Matéria Prima - Para Importar

```{r}
to_imp_itens <-    
  itens |> 
  filter(tetenr %in% mp_cmp)  

to_imp_itens <-    
  set_item_family(to_imp_itens)   

# Estes dados servem para importar em massa # Antes é preciso criar as famílias 
manualmente to_imp_itens |>    
  select(estabelecimento, tetenr, desc, temagr, mat_group_desc, grupo_estoque, family) |> View()

```

# Importar Estrutura de 1 F

Vamos criar aqui o processo para importar os produtos de 1 item F

```{r}

item_f <- "F02023004001A"

itens |> 
  filter(str_detect(tetenr, item_f)) |> 
  select(estabelecimento = empresa, 
         item = tetenr,
         desc,
         temagr, 
         mat_group_desc,
         grupo_estoque)

# BOM
bom_f <- get_bom_from_id("F02023004001A", bom)
bom_f

manufacted_f <- 
  bom_f |> 
  distinct(material_number) 

manufacted_f <- 
  manufacted_f |> 
  mutate(bop = map(material_number, ~ bop |> filter(part_number == .))) |> 
  unnest(bop) |> 
  mutate(desc = str_c(str_replace_na(description_1, replacement = " "),
                      str_replace_na(description_2, replacement = " ")) |>
           str_trim("both")) |> 
  select(-c(company, variant, description_1, description_2, part_number)) |> 
  select(item = material_number, desc, estabelecimento = firm, part_type,
         cycle_time = cicle_type, piece_time, setup = set_up_time, 
         machine, linha = description, multi_machines, multi_personnel, 
         material_group, matchcode)
  
manufacted_f |> View()

get_itens_from_bom <- function(bom, itens){
  components <-
    bom |> pull(bom_component)

  bom_itens <-
    itens |>
    arrange(estabelecimento, id, familia) |>
    filter(id %in% components) |>
    arrange(id)
}



```

### Acha Fs de item

```{r}

ii <- "1201564"

bom |> 
  filter(str_detect(bom_component, ii)) |> 
  distinct(material_number) |> 
  pull(material_number) |> 
  map(~ bom |> filter(str_detect(bom_component, .)) |> 
        distinct(material_number)) |> 
  reduce(rbind) |> 
  distinct(material_number) |> 
  left_join(projetos, join_by(material_number == item))


projetos |> distinct(prj_sigla, prj_desc) |> View()

```
