---
title: "Itens e Estruturas"
author: "Simoldes"
---

```{r}
library(tidyverse)
library(janitor)
library(readxl)
library(here)
library(cellranger)
library(gdata)

```

## Itens

Carga de dados exportadas do XPert.

```{r}
#| warning: false

source("R/read-itens.R")
itens <- read_itens()

projetos <- 
  itens |> 
  filter(str_detect(item, "^F")) 

projetos |> write_rds("data/projetos.rds")
projetos <- read_rds("data/projetos.rds")

```

## Ler estruturas de BoM e BoP

```{r}

source("R/read-bom.R")
source("R/read-bop.R")

# file_bom <- here::here("data", "BOM 2025-06-11.xlsx")
file_bom <- here::here("data", "BOM 2025-09-02.xlsx")
bom <- read_bom(file_bom)

file_bop_spi <- here::here("data", "BOP SPI 2025-07-20.xlsx")
file_bop_spb <- here::here("data", "BOP SPB 2025-07-20.xlsx")

bop_spi <- read_bop(file_bop_spi)
bop_spb <- read_bop(file_bop_spb)

bop <- rbind(bop_spi, bop_spb)

bop |> glimpse()

## Alguns itens não possuem BOM registrada!
## Pendente decidir o que fazer com estes!
p_importar |> 
  anti_join(bom, join_by(item == material_number)) |> 
  View()

```

## BoM do que vai importar

```{r}


x <- get_bom_from_id("F02023004001A", bom)


mp <-
  itens |>
  filter(!str_detect(item, "^E1")) |>
  filter(!str_detect(item, "^E2")) |>
  filter(!str_detect(item, "^F0")) |>
  filter(!str_detect(item, "^FA")) |>
  filter(!str_detect(item, "^IO")) |>
  filter(!str_detect(item, "^LM")) |>
  filter(!str_detect(item, "^LP")) |>
  filter(!str_detect(item, "^MA")) |>
  filter(!str_detect(item, "^MO")) |>
  filter(!str_detect(item, "^R1")) |>
  filter(!str_detect(item, "^R2")) |>
  filter(!str_detect(item, "^SE")) |>
  filter(!str_detect(item, "^SP")) |>
  filter(!str_detect(item, "^V1")) |>
  select(item, xp_temagr, xp_mat_group_desc, desc) |>
  filter(!str_detect(item, "^F")) |>    
  filter(!str_detect(item, "^I")) |>    
  filter(!str_detect(item, "^SP"))



```

## 

## Matéria Prima - Para Importar

```{r}


mp <-    
  itens |> 
  filter(item %in% mp_cmp)  

to_imp_itens <-    
  set_item_family(to_imp_itens)   

# Estes dados servem para importar em massa # Antes é preciso criar as famílias 
manualmente to_imp_itens |>    
  select(estabelecimento, item, desc, temagr, mat_group_desc, grupo_estoque, family) |> View()

```

# Importar Estrutura de 1 F

Vamos criar aqui o processo para importar os produtos de 1 item F

```{r}

item_f <- "F02023004001A"

itens |> 
  filter(str_detect(item, item_f)) |> 
  select(estabelecimento = empresa, 
         item = tetenr,
         desc,
         temagr, 
         mat_group_desc,
         grupo_estoque)

# BOM
bom_f <- get_bom_from_id("F02023004001A", bom)
bom_f

manufacted_f <- 
  bom_f |> 
  distinct(material_number) 

manufacted_f <- 
  manufacted_f |> 
  mutate(bop = map(material_number, ~ bop |> filter(part_number == .))) |> 
  unnest(bop) |> 
  mutate(desc = str_c(str_replace_na(description_1, replacement = " "),
                      str_replace_na(description_2, replacement = " ")) |>
           str_trim("both")) |> 
  select(-c(company, variant, description_1, description_2, part_number)) |> 
  select(item = material_number, desc, estabelecimento = firm, part_type,
         cycle_time = cicle_type, piece_time, setup = set_up_time, 
         machine, linha = description, multi_machines, multi_personnel, 
         material_group, matchcode)
  
manufacted_f |> View()

get_itens_from_bom <- function(bom, itens){
  components <-
    bom |> pull(bom_component)

  bom_itens <-
    itens |>
    arrange(estabelecimento, id, familia) |>
    filter(id %in% components) |>
    arrange(id)
}



```

### Acha Fs de item

```{r}

ii <- "1201564"

bom |> 
  filter(str_detect(bom_component, ii)) |> 
  distinct(material_number) |> 
  pull(material_number) |> 
  map(~ bom |> filter(str_detect(bom_component, .)) |> 
        distinct(material_number)) |> 
  reduce(rbind) |> 
  distinct(material_number) |> 
  left_join(projetos, join_by(material_number == item))


projetos |> distinct(prj_sigla, prj_desc) |> View()

```

# Ler Lista de famílias, MP e Componentes gerar aquivo para importar

```{r}

team_file <- here("data", "2025-09-19 classif fam mp.xlsx")

tf_sheets <- readxl::excel_sheets(team_file)

importar <- readxl::read_excel(team_file,
                               sheet = tf_sheets[6]) |> 
  janitor::clean_names() |> 
  select(item, desc, familia_ds, un)

importar <- 
  importar |> 
  group_by(item) |> 
  summarise(desc = first(desc),
            fam_mat = first(familia_ds),
            un = first(un)) |> 
  mutate(grupo_estoque = str_sub(fam_mat, start = 1L, end = 2L),
         fam_com = " ",
         estabelecimento = "102",
         cod_complementar = " ")

importar |> glimpse()

source("R/mass-import-datasul.R")

importar <- 
  importar |> 
  #filter(str_detect(id, "^11")) |> 
  mutate(fam_mat = as.character(fam_mat)) 

build_file_to_cd0209(importar, "mp.txt")


pp |> 
  filter(str_detect(id, "1100002"))



```
