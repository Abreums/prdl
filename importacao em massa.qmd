---
title: "export_data"
author: "Simoldes"
---

```{r}
library(gdata)
```

azch42 é o código do item para o cliente

f \|\> distinct(teprgr) \|\> View()

teprgr parece ser o código do projeto.

# Importação em Massa

```{r}
f |> filter(str_detect(teprgr, "216")) |> View()
```

2GP 868 010 C BSE F00717002041A PNL TRAS DIR T-CROSS DOOR PANEL TITAN COOL RR 2GP 867 006 L AAM F00717003040A PNL DIAN DIR T-CROSS DOOR PAINEL W/LIGH/CHIM FR 2GP 868 009 C BSE F00717002040A PNL TRAS ESQ T-CROSS DOOR PANEL TITAN COOL RL 2GP 867 005 M AAM F00717002045A PNL DIAN ESQ T-CROSS DOOR PAINEL W/LIGHT/CRE FL

```{r}

import_data <- 
  f |> 
  filter(tetenr %in% c("F00717002041A", "F00717003040A",
                            "F00717002040A", "F00717002045A")) |> 
  filter(empresa == "SPB")
 
#       id,
#       desc,
#       grupo_estoque,
#       fam_mat,
#       fam_com,
#       un,
#       estabelecimento,
#       cod_complementar

import_data <- 
  import_data |> 
  select(id = tetenr, desc, grupo_estoque, fam_mat = teprgr, fam_com = teprgr, un, estabelecimento, cod_complementar = tezinr)

import_data <- 
  import_data |> 
  mutate(fam_mat = str_c("10VW", fam_mat),
         fam_com = "VW1050")
import_data |> View() 

 

x1 <- data.frame(
  tipo_trx = c("1"),                # 1
  item = c("1234567890123456"),     # 16
  desc = c("123456789012345678901234567890123456789012345678901234567890"), # 60
  gr_est = c("12"),                 # 2
  fam_mat = c("12345678"),              # 8
  fam_com = c("12345678"),           #8
  un = c("12"),
  est = c("102"),
  situacao = c(" 1"),
  dt_impl = c("01012025"),
  dt_lib = c("01012025"),
  folha = c("12345678"),
  tipo_ctrl = c("02"),
  aplicacao = c("02"),
  lote_economico = ("1234567890000"),
  cod_compl = c("12345678901234567890"),
  info_compl = c("1234567890123456"),
  imagem = c("123456789012345678901234567890"),
  narrativa = c("1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890")
)

imp |> View()

to_exp <- 
imp |> 
  mutate(tipo_trx = 2,
         desc = str_c(desc, " ", desc2),
         grupo_estoque = case_when(
           tipo_material == "Raw materials" ~ "30",
           tipo_material == "Packaging" ~ "80",
           tipo_material == "Returnable packaging" ~ "80",
           tipo_material == "Semifinished Product" ~ "20",
           TRUE ~ "90"
         ),
         fam_mat = case_when(
           mat_group_desc == "ABS-PC" ~ "3013001",
           mat_group_desc == "ASA-PC" ~ "3014001",
           mat_group_desc == "METALLIC CLIPS OMEGA" ~ "3026001",
           TRUE ~ "9999999"
         ),
         fam_com = "",
         situacao = 1,
         dt_impl = "01012025",
         dt_lib = "01012025",
         folha = "",
         tipo_controle = ifelse(grupo_estoque == "80", 4, 2),
         aplicacao = "2",
         lote_econ = "",
         cod_complementar = "",
         info = "",
         imagem = "",
         narrativa = "",
         estabelecimento = as.character(estabelecimento)
           ) |> 
  select(tipo_trx, 
         id,
         desc,
         grupo_estoque,
         fam_mat,
         fam_com,
         un,
         estabelecimento,
         situacao,
         dt_impl,
         dt_lib,
         folha,
         tipo_controle,
         aplicacao,
         lote_econ,
         cod_complementar,
         info,
         imagem,
         narrativa
         ) 

to_exp |> View()
to_exp <- as.data.frame(to_exp)
write.fwf(x = to_exp,
          file = "out2.lst",
          width = c(1, 16, 60, 2, 8, 8, 2, 5, 2, 8, 8, 8, 2, 2, 13, 20, 16, 30, 2000),
          colnames = FALSE,
          rownames = FALSE,
          sep = "")

column_widths <- c(1,16,30,12,8,2,3,2,8,8,8,2,2,13,20,16,39,100)
write.fwf(x = testi, 
            file = "teste.txt",
            width = column_widths,
          colnames = FALSE,
          rownames = FALSE)

## Default
write.fwf(x=testi, file="teste.txt")

## NA should be -
write.fwf(x=testData, na="-")
## NA should be -NA-
write.fwf(x=testData, na="-NA-")

## Some other separator than space
write.fwf(x=testData[, 1:4], sep="-mySep-")

## Force wider columns
write.fwf(x=testData[, 1:5], width=20)

## Show effect of 'scientific' option
testData$num3 <- testData$num3 * 1e8
write.fwf(testData, scientific=TRUE)
write.fwf(testData, scientific=FALSE)
testData$num3 <- testData$num3 / 1e8

## Write to file and report format and fixed width information
file <- tempfile()
formatInfo <- write.fwf(x=testData, file=file, formatInfo=TRUE)
formatInfo

## Read exported data back to R (note +1 due to separator)
## - without header
read.fwf(file=file, widths=formatInfo$width + 1, header=FALSE, skip=1,
         strip.white=TRUE)

## - with header, via postimport modfication
tmp <- read.fwf(file=file, widths=formatInfo$width + 1, skip=1,
                strip.white=TRUE)
colnames(tmp) <- read.table(file=file, nrow=1, as.is=TRUE)
tmp

## - with header, persuading read.fwf to accept header properly
## (thanks to Marc Schwartz)
read.fwf(file=file, widths=formatInfo$width + 1, strip.white=TRUE,
         skip=1, col.names=read.table(file=file, nrow=1, as.is=TRUE))

## - with header, using quotes
write.fwf(x=testData, file=file, quote=TRUE)
read.table(file=file, header=TRUE, strip.white=TRUE)

## Tidy up
unlink(file)
```
