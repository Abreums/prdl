---
title: "Linhas x Postos x Produtos"
author: "Simoldes"
---

```{r}
library(tidyverse)
library(readxl)
library(janitor)
library(here)
library(cellranger)

```

## Para começar: escopo restrito aos Fs e Is selecionados

Ver no "itens e estrutura.qmd" selecionar apenas os Fs e Is ativos.

```{r}

df_para_importar <-  
  p1 |> 
  full_join(vendas) |> 
  distinct(item) |> 
  filter(str_detect(item,"^F") | str_detect(item, "^I"))
para_importar <- 
  df_para_importar |> 
  pull(item)
length(para_importar)

pecas <- 
  fi |>
  filter(tetenr %in% para_importar) |> 
  distinct(tetenr)

```

-   Parte 1

    -   Para determinar os postos de trabalho e suas relações com as peças fabricadas vamos utilizar o relacionamento entre BoP, Posto de Trabalho, Moldes e Peças.

-   Parte 2

    -   Podemos validar estes relacionamentos com os relatórios de indicadores das linhas de injeção, pintura, termoformagem e montagem.

## Parte 1 - BoM (Peça) x Posto x Molde

```{r}
source("R/read-bop.R")

file_spi_bop <- here("data", "BOP SPI 2025-07-20.xlsx")
file_spb_bop <- here("data", "BOP SPB 2025-07-20.xlsx")

spi_bop <- read_bop(file_spi_bop)
spb_bop <- read_bop(file_spb_bop)

spi_bop |> nrow()
spb_bop |> nrow()

bop <- spi_bop |> rbind(spb_bop)
bop <- 
  bop |> 
  mutate(firm = ifelse(str_equal(firm, "7"), "SPI", "SPB")) |> 
  mutate(description = str_to_upper(description) |> str_squish()) |> 
 # filter(!str_detect(description, "INATIVO")) |> 
  mutate(description = case_when(
           str_detect(description, "^INJ") ~ "INJEÇÃO",
           str_detect(description, "NJE") ~ "INJEÇÃO",
           str_detect(description, "ONTAG") ~ "MONTAGEM",
           str_detect(description, "^MON") ~ "MONTAGEM",
           str_detect(description, "^MOTA") ~ "MONTAGEM",
           str_detect(description, "REEM") ~ "REEMBALAGEM",
           str_detect(description, "ALTERAÇÃO DE EMBALAGEM") ~ "REEMBALAGEM",
           str_detect(description, "ASSEMBLY") ~ "MONTAGEM",
           str_detect(description, "MIST") ~ "MISTURA",
           str_detect(description, "INCJEÇÃO") ~ "INJEÇÃO",
           str_detect(description, "INECÇÃO") ~ "INJEÇÃO",
           str_detect(description, "INEJCÇÃO") ~ "INJEÇÃO",
           str_detect(description, "INEJÇÃO") ~ "INJEÇÃO",
           str_detect(description, "INJEÇÃO") ~ "INJEÇÃO",
           str_detect(description, "EMBALAGEM") ~ "REEMBALAGEM",
           str_detect(description, "TROCA") ~ "TROCA ETIQUETA",
           str_detect(description, "PINTURA") ~ "PINTURA",
           
           str_detect(description, "REMEBALAGEM") ~ "REEMBALAGEM",
           str_detect(description, "REETIQUETAGEM") ~ "TROCA ETIQUETA",
           str_detect(description, "MUDANÇA DE ETIQUETA") ~ "TROCA ETIQUETA",
           str_detect(description, "MOBTAGEM") ~ "MONTAGEM",
           str_detect(description, "MINTURA") ~ "PINTURA",
           str_detect(description, "TECIDO") ~ "TECIDO",
           str_detect(description, "COLAGEM") ~ "COLAGEM",
           str_detect(description, "2") ~ "INJEÇÃO",
           str_detect(description, "ACTIVO") ~ "PINTURA",
           str_detect(description, "PNL DIAN DIR T-CROSS") ~ "MONTAGEM",
           str_detect(description, "PNL DIAN ESQ FOX 4P") ~ "MONTAGEM",
           str_detect(description, "POSTO") ~ "MONTAGEM",
           str_detect(description, "UR") ~ "MONTAGEM",
           str_detect(description, "CORRIGIDO") ~ "MONTAGEM",
           str_detect(description, "MAÇANETA") ~ "MONTAGEM",
            
           TRUE ~ description))

bop_para_importar <- 
  bop |> 
  full_join(pecas, join_by(part_number == tetenr))


bop_para_importar |> glimpse()

# 280 postos de trabalho para serem cadastrados
bop_para_importar |> count(firm,description, machine, sort = TRUE) |> 
  arrange(firm, description, machine) |> View()

```

### Verificar quais moldes possuem BoP para mais de um posto de trabalho

```{r}

tools <- 
  bop |> 
  select(firm, description, machine, tool) |> 
  group_by(firm, description, tool) |> 
  nest() 

tools <- 
  tools |> 
  mutate(data = map(data, ~ .x |> 
                      distinct(machine)))


```

### Mapear Linhas x Postos x Moldes x Peças

```{r}

linhas <- 
  bop |> 
  group_by(firm, description) |> 
  nest()

linhas_postos <- 
  linhas |> 
  mutate(data = map(data, ~ .x |> 
                      group_by(machine) |> 
                      nest()))


linhas_postos_moldes <- 
  linhas_postos |> 
  mutate(data = map(data, ~ .x |> 
                      mutate(data = map(data, ~ .x |> 
                                          group_by(tool) |> 
                                          nest()))))

# linhas_postos_moldes |> View()

```

### Relação de Linhas x Postos x Peças

```{r}
bop |> 
  select(firm, part_number, machine, linha = description) |> 
  distinct(linha, machine) |> View()



```

## Parte 2 - Validação - Relatório de Indicadores

Não vale a pena considerar apenas os dados que estão cadastrados no XPert.

Os relatórios de performance das linhas indicam quais moldes e peças são utilizados em cada posto. E quais postos são realmente usados nas linhas.

### Itens x Postos

Para buscar uma lista com a relação de itens por postos vamos utilizar os relatórios de produção por linha dos últimos meses.

#### SPI

##### Injeção

```{r}

source("R/daily-production-analysis-report.R")

# filename_report <- here("reports", "Production Daily Analisys - Assembly spi 2025-08-20.xls")
folder_report <- here("reports")

files_list <-
  list.files(path = folder_report,
             pattern = "^Production Daily Analisys - Assembly",
               full.names = TRUE)


report <- 
  map(files_list, 
      ~ read_report(.x)) |> 
  reduce(rbind)

report |> glimpse()

```

No relatório acima temos uma relação entre filial, linha, posto, molde e item.
```{r}
bop |> distinct(firm, description, machine) |> arrange(firm, description) |> write.csv("postos.csv")
bop |> 
  filter(str_detect(firm, "SPI"),
         str_detect(description, "MONTAGEM")) |> 
  select(estabelecimento = firm, linha = description, centro_trabalho = machine) |> 
  distinct(estabelecimento, linha, centro_trabalho) |> 
  mutate(descricao = "",
         grupo_maquina = "") |> 
  write.csv("spi_montagem.csv")

```

